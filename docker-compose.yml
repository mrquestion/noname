version: "3"

services:
  web:
    build:
      context: noname-web
      # dockerfile: Dockerfile
    deploy:
      replicas: 1
    depends_on:
      - api
    volumes:
      - ./noname-web:/opt/web
      - ./settings.json:/opt/web/settings.json
      - ./noname-ui/build:/opt/web/static
    networks:
      - noname-network
    ports:
      - 5000:5000
    environment:
      - FLASK_ENV=development
  api:
    build:
      context: noname-api
      # dockerfile: Dockerfile
    deploy:
      replicas: 1
    depends_on:
      - redis
      - database-mongo
    volumes:
      - ./noname-api:/opt/api
      - ./settings.json:/opt/api/settings.json
    networks:
      - noname-network
    environment:
      - FLASK_ENV=development

  database-mongo:
    image: mongo:latest
    volumes:
      - ./noname-initialize:/opt/initialize
    networks:
      - noname-network
  database-mongo-express:
    image: mongo-express:latest
    depends_on:
      - database-mongo
    networks:
      - noname-network
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=database-mongo

  redis:
    image: redis:latest
    deploy:
      replicas: 1
    networks:
      - noname-network

  database-initialize:
    build:
      context: noname-initialize
      # dockerfile: Dockerfile
    depends_on:
      - database-mongo
    volumes:
      - ./noname-initialize:/opt/initialize
      - ./settings.json:/opt/initialize/settings.json
    networks:
      - noname-network
    command: sh /opt/initialize/all.sh

networks:
  noname-network:
    external: true
